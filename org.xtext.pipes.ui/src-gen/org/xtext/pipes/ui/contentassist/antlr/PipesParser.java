/*
* generated by Xtext
*/
package org.xtext.pipes.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.pipes.services.PipesGrammarAccess;

public class PipesParser extends AbstractContentAssistParser {
	
	@Inject
	private PipesGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.pipes.ui.contentassist.antlr.internal.InternalPipesParser createParser() {
		org.xtext.pipes.ui.contentassist.antlr.internal.InternalPipesParser result = new org.xtext.pipes.ui.contentassist.antlr.internal.InternalPipesParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_3(), "rule__Model__Group_3__0");
					put(grammarAccess.getModelAccess().getGroup_6(), "rule__Model__Group_6__0");
					put(grammarAccess.getModelAccess().getGroup_9(), "rule__Model__Group_9__0");
					put(grammarAccess.getWallRuleAccess().getGroup(), "rule__WallRule__Group__0");
					put(grammarAccess.getOpeningAccess().getGroup(), "rule__Opening__Group__0");
					put(grammarAccess.getOpeningAccess().getGroup_2(), "rule__Opening__Group_2__0");
					put(grammarAccess.getOpeningAccess().getGroup_3(), "rule__Opening__Group_3__0");
					put(grammarAccess.getOpeningAccess().getGroup_8(), "rule__Opening__Group_8__0");
					put(grammarAccess.getFlowSegmentAccess().getGroup(), "rule__FlowSegment__Group__0");
					put(grammarAccess.getFlowSegmentAccess().getGroup_2(), "rule__FlowSegment__Group_2__0");
					put(grammarAccess.getFlowSegmentAccess().getGroup_3(), "rule__FlowSegment__Group_3__0");
					put(grammarAccess.getLocalPlacementAccess().getGroup(), "rule__LocalPlacement__Group__0");
					put(grammarAccess.getLocalPlacementAccess().getGroup_2(), "rule__LocalPlacement__Group_2__0");
					put(grammarAccess.getLocalPlacementAccess().getGroup_3(), "rule__LocalPlacement__Group_3__0");
					put(grammarAccess.getAxis2Placement3DAccess().getGroup(), "rule__Axis2Placement3D__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
					put(grammarAccess.getDirectionAccess().getGroup(), "rule__Direction__Group__0");
					put(grammarAccess.getDirectionAccess().getGroup_4(), "rule__Direction__Group_4__0");
					put(grammarAccess.getModelAccess().getElementsAssignment_2(), "rule__Model__ElementsAssignment_2");
					put(grammarAccess.getModelAccess().getElementsAssignment_3_1(), "rule__Model__ElementsAssignment_3_1");
					put(grammarAccess.getModelAccess().getElementsAssignment_5(), "rule__Model__ElementsAssignment_5");
					put(grammarAccess.getModelAccess().getElementsAssignment_6_1(), "rule__Model__ElementsAssignment_6_1");
					put(grammarAccess.getModelAccess().getElementsAssignment_8(), "rule__Model__ElementsAssignment_8");
					put(grammarAccess.getModelAccess().getElementsAssignment_9_1(), "rule__Model__ElementsAssignment_9_1");
					put(grammarAccess.getWallRuleAccess().getNameAssignment_1(), "rule__WallRule__NameAssignment_1");
					put(grammarAccess.getWallRuleAccess().getElementNameAssignment_3(), "rule__WallRule__ElementNameAssignment_3");
					put(grammarAccess.getWallRuleAccess().getDescriptionAssignment_5(), "rule__WallRule__DescriptionAssignment_5");
					put(grammarAccess.getWallRuleAccess().getPlacementAssignment_7(), "rule__WallRule__PlacementAssignment_7");
					put(grammarAccess.getOpeningAccess().getNameAssignment_1(), "rule__Opening__NameAssignment_1");
					put(grammarAccess.getOpeningAccess().getElementNameAssignment_2_1(), "rule__Opening__ElementNameAssignment_2_1");
					put(grammarAccess.getOpeningAccess().getDescriptionAssignment_3_1(), "rule__Opening__DescriptionAssignment_3_1");
					put(grammarAccess.getOpeningAccess().getPlacementAssignment_5(), "rule__Opening__PlacementAssignment_5");
					put(grammarAccess.getOpeningAccess().getWallsAssignment_7(), "rule__Opening__WallsAssignment_7");
					put(grammarAccess.getOpeningAccess().getWallsAssignment_8_1(), "rule__Opening__WallsAssignment_8_1");
					put(grammarAccess.getFlowSegmentAccess().getNameAssignment_1(), "rule__FlowSegment__NameAssignment_1");
					put(grammarAccess.getFlowSegmentAccess().getElementNameAssignment_2_1(), "rule__FlowSegment__ElementNameAssignment_2_1");
					put(grammarAccess.getFlowSegmentAccess().getDescriptionAssignment_3_1(), "rule__FlowSegment__DescriptionAssignment_3_1");
					put(grammarAccess.getFlowSegmentAccess().getPlacementAssignment_5(), "rule__FlowSegment__PlacementAssignment_5");
					put(grammarAccess.getLocalPlacementAccess().getRelativeToAssignment_2_1(), "rule__LocalPlacement__RelativeToAssignment_2_1");
					put(grammarAccess.getLocalPlacementAccess().getAxis2placement3dAssignment_3_1(), "rule__LocalPlacement__Axis2placement3dAssignment_3_1");
					put(grammarAccess.getAxis2Placement3DAccess().getCartesianXAssignment_3(), "rule__Axis2Placement3D__CartesianXAssignment_3");
					put(grammarAccess.getAxis2Placement3DAccess().getCartesianYAssignment_5(), "rule__Axis2Placement3D__CartesianYAssignment_5");
					put(grammarAccess.getAxis2Placement3DAccess().getCartesianZAssignment_7(), "rule__Axis2Placement3D__CartesianZAssignment_7");
					put(grammarAccess.getAxis2Placement3DAccess().getAxisAssignment_10(), "rule__Axis2Placement3D__AxisAssignment_10");
					put(grammarAccess.getAxis2Placement3DAccess().getRefDirectionAssignment_12(), "rule__Axis2Placement3D__RefDirectionAssignment_12");
					put(grammarAccess.getDirectionAccess().getXAssignment_1(), "rule__Direction__XAssignment_1");
					put(grammarAccess.getDirectionAccess().getYAssignment_3(), "rule__Direction__YAssignment_3");
					put(grammarAccess.getDirectionAccess().getZAssignment_4_1(), "rule__Direction__ZAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.pipes.ui.contentassist.antlr.internal.InternalPipesParser typedParser = (org.xtext.pipes.ui.contentassist.antlr.internal.InternalPipesParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PipesGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PipesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
