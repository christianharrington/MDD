/*
* generated by Xtext
*/
grammar InternalPipes;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.pipes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.pipes.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.pipes.services.PipesGrammarAccess;

}

@parser::members {

 	private PipesGrammarAccess grammarAccess;
 	
    public InternalPipesParser(TokenStream input, PipesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected PipesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)	otherlv_1='Model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='elements' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getElementsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsGUIDElementParserRuleCall_3_2_0()); 
	    }
		lv_elements_5_0=ruleGUIDElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"GUIDElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsGUIDElementParserRuleCall_3_3_1_0()); 
	    }
		lv_elements_7_0=ruleGUIDElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_0, 
        		"GUIDElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_4());
    }
)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleGUIDElement
entryRuleGUIDElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGUIDElementRule()); }
	 iv_ruleGUIDElement=ruleGUIDElement 
	 { $current=$iv_ruleGUIDElement.current; } 
	 EOF 
;

// Rule GUIDElement
ruleGUIDElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGUIDElementAccess().getGUIDElement_ImplParserRuleCall_0()); 
    }
    this_GUIDElement_Impl_0=ruleGUIDElement_Impl
    { 
        $current = $this_GUIDElement_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGUIDElementAccess().getWallParserRuleCall_1()); 
    }
    this_Wall_1=ruleWall
    { 
        $current = $this_Wall_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGUIDElementAccess().getOpeningParserRuleCall_2()); 
    }
    this_Opening_2=ruleOpening
    { 
        $current = $this_Opening_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGUIDElementAccess().getFlowSegmentParserRuleCall_3()); 
    }
    this_FlowSegment_3=ruleFlowSegment
    { 
        $current = $this_FlowSegment_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGUIDElement_Impl
entryRuleGUIDElement_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGUIDElement_ImplRule()); }
	 iv_ruleGUIDElement_Impl=ruleGUIDElement_Impl 
	 { $current=$iv_ruleGUIDElement_Impl.current; } 
	 EOF 
;

// Rule GUIDElement_Impl
ruleGUIDElement_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getGUIDElement_ImplAccess().getGUIDElementAction_0(),
            $current);
    }
)	otherlv_1='GUIDElement' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGUIDElement_ImplAccess().getGUIDElementKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGUIDElement_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='GUID' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGUIDElement_ImplAccess().getGUIDKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGUIDElement_ImplAccess().getGUIDEStringParserRuleCall_3_1_0()); 
	    }
		lv_GUID_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGUIDElement_ImplRule());
	        }
       		set(
       			$current, 
       			"GUID",
        		lv_GUID_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='Name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGUIDElement_ImplAccess().getNameKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGUIDElement_ImplAccess().getNameEStringParserRuleCall_4_1_0()); 
	    }
		lv_Name_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGUIDElement_ImplRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='Description' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGUIDElement_ImplAccess().getDescriptionKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGUIDElement_ImplAccess().getDescriptionEStringParserRuleCall_5_1_0()); 
	    }
		lv_Description_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGUIDElement_ImplRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGUIDElement_ImplAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleWall
entryRuleWall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWallRule()); }
	 iv_ruleWall=ruleWall 
	 { $current=$iv_ruleWall.current; } 
	 EOF 
;

// Rule Wall
ruleWall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Wall' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWallAccess().getWallKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWallAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='GUID' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWallAccess().getGUIDKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWallAccess().getGUIDEStringParserRuleCall_2_1_0()); 
	    }
		lv_GUID_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWallRule());
	        }
       		set(
       			$current, 
       			"GUID",
        		lv_GUID_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='Name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWallAccess().getNameKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWallAccess().getNameEStringParserRuleCall_3_1_0()); 
	    }
		lv_Name_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWallRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='Description' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWallAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWallAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_Description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWallRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='placement' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getWallAccess().getPlacementKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWallAccess().getPlacementLocalPlacementParserRuleCall_6_0()); 
	    }
		lv_placement_9_0=ruleLocalPlacement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWallRule());
	        }
       		set(
       			$current, 
       			"placement",
        		lv_placement_9_0, 
        		"LocalPlacement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getWallAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOpening
entryRuleOpening returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpeningRule()); }
	 iv_ruleOpening=ruleOpening 
	 { $current=$iv_ruleOpening.current; } 
	 EOF 
;

// Rule Opening
ruleOpening returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Opening' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpeningAccess().getOpeningKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOpeningAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='GUID' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOpeningAccess().getGUIDKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpeningAccess().getGUIDEStringParserRuleCall_2_1_0()); 
	    }
		lv_GUID_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpeningRule());
	        }
       		set(
       			$current, 
       			"GUID",
        		lv_GUID_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='Name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOpeningAccess().getNameKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpeningAccess().getNameEStringParserRuleCall_3_1_0()); 
	    }
		lv_Name_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpeningRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='Description' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOpeningAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpeningAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_Description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpeningRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='placement' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOpeningAccess().getPlacementKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpeningAccess().getPlacementLocalPlacementParserRuleCall_6_0()); 
	    }
		lv_placement_9_0=ruleLocalPlacement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpeningRule());
	        }
       		set(
       			$current, 
       			"placement",
        		lv_placement_9_0, 
        		"LocalPlacement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='walls' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOpeningAccess().getWallsKeyword_7_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOpeningAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpeningAccess().getWallsWallParserRuleCall_7_2_0()); 
	    }
		lv_walls_12_0=ruleWall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpeningRule());
	        }
       		add(
       			$current, 
       			"walls",
        		lv_walls_12_0, 
        		"Wall");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOpeningAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpeningAccess().getWallsWallParserRuleCall_7_3_1_0()); 
	    }
		lv_walls_14_0=ruleWall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpeningRule());
	        }
       		add(
       			$current, 
       			"walls",
        		lv_walls_14_0, 
        		"Wall");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOpeningAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getOpeningAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleFlowSegment
entryRuleFlowSegment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlowSegmentRule()); }
	 iv_ruleFlowSegment=ruleFlowSegment 
	 { $current=$iv_ruleFlowSegment.current; } 
	 EOF 
;

// Rule FlowSegment
ruleFlowSegment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FlowSegment' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFlowSegmentAccess().getFlowSegmentKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFlowSegmentAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='GUID' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFlowSegmentAccess().getGUIDKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowSegmentAccess().getGUIDEStringParserRuleCall_2_1_0()); 
	    }
		lv_GUID_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowSegmentRule());
	        }
       		set(
       			$current, 
       			"GUID",
        		lv_GUID_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='Name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFlowSegmentAccess().getNameKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowSegmentAccess().getNameEStringParserRuleCall_3_1_0()); 
	    }
		lv_Name_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowSegmentRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='Description' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFlowSegmentAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowSegmentAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_Description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowSegmentRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='placement' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFlowSegmentAccess().getPlacementKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFlowSegmentAccess().getPlacementLocalPlacementParserRuleCall_6_0()); 
	    }
		lv_placement_9_0=ruleLocalPlacement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFlowSegmentRule());
	        }
       		set(
       			$current, 
       			"placement",
        		lv_placement_9_0, 
        		"LocalPlacement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFlowSegmentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleLocalPlacement
entryRuleLocalPlacement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalPlacementRule()); }
	 iv_ruleLocalPlacement=ruleLocalPlacement 
	 { $current=$iv_ruleLocalPlacement.current; } 
	 EOF 
;

// Rule LocalPlacement
ruleLocalPlacement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalPlacementAccess().getLocalPlacementAction_0(),
            $current);
    }
)	otherlv_1='LocalPlacement' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocalPlacementAccess().getLocalPlacementKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocalPlacementAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='relativeTo' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLocalPlacementAccess().getRelativeToKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalPlacementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLocalPlacementAccess().getRelativeToLocalPlacementCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='axis2placement3d' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLocalPlacementAccess().getAxis2placement3dKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalPlacementAccess().getAxis2placement3dAxis2Placement3DParserRuleCall_4_1_0()); 
	    }
		lv_axis2placement3d_6_0=ruleAxis2Placement3D		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalPlacementRule());
	        }
       		set(
       			$current, 
       			"axis2placement3d",
        		lv_axis2placement3d_6_0, 
        		"Axis2Placement3D");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLocalPlacementAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAxis2Placement3D
entryRuleAxis2Placement3D returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAxis2Placement3DRule()); }
	 iv_ruleAxis2Placement3D=ruleAxis2Placement3D 
	 { $current=$iv_ruleAxis2Placement3D.current; } 
	 EOF 
;

// Rule Axis2Placement3D
ruleAxis2Placement3D returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Axis2Placement3D' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAxis2Placement3DAccess().getAxis2Placement3DKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAxis2Placement3DAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='cartesianX' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAxis2Placement3DAccess().getCartesianXKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAxis2Placement3DAccess().getCartesianXEDoubleParserRuleCall_3_0()); 
	    }
		lv_cartesianX_3_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAxis2Placement3DRule());
	        }
       		set(
       			$current, 
       			"cartesianX",
        		lv_cartesianX_3_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='cartesianY' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAxis2Placement3DAccess().getCartesianYKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAxis2Placement3DAccess().getCartesianYEDoubleParserRuleCall_5_0()); 
	    }
		lv_cartesianY_5_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAxis2Placement3DRule());
	        }
       		set(
       			$current, 
       			"cartesianY",
        		lv_cartesianY_5_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='cartesianZ' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAxis2Placement3DAccess().getCartesianZKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAxis2Placement3DAccess().getCartesianZEDoubleParserRuleCall_7_0()); 
	    }
		lv_cartesianZ_7_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAxis2Placement3DRule());
	        }
       		set(
       			$current, 
       			"cartesianZ",
        		lv_cartesianZ_7_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='axis' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAxis2Placement3DAccess().getAxisKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAxis2Placement3DAccess().getAxisDirectionParserRuleCall_9_0()); 
	    }
		lv_axis_9_0=ruleDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAxis2Placement3DRule());
	        }
       		set(
       			$current, 
       			"axis",
        		lv_axis_9_0, 
        		"Direction");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='refDirection' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAxis2Placement3DAccess().getRefDirectionKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAxis2Placement3DAccess().getRefDirectionDirectionParserRuleCall_11_0()); 
	    }
		lv_refDirection_11_0=ruleDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAxis2Placement3DRule());
	        }
       		set(
       			$current, 
       			"refDirection",
        		lv_refDirection_11_0, 
        		"Direction");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAxis2Placement3DAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); } 
	 iv_ruleEDouble=ruleEDouble 
	 { $current=$iv_ruleEDouble.current.getText(); }  
	 EOF 
;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Entry rule entryRuleDirection
entryRuleDirection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectionRule()); }
	 iv_ruleDirection=ruleDirection 
	 { $current=$iv_ruleDirection.current; } 
	 EOF 
;

// Rule Direction
ruleDirection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Direction' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirectionAccess().getDirectionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirectionAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='x' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDirectionAccess().getXKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectionAccess().getXEDoubleParserRuleCall_3_0()); 
	    }
		lv_x_3_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectionRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_3_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='y' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDirectionAccess().getYKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectionAccess().getYEDoubleParserRuleCall_5_0()); 
	    }
		lv_y_5_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectionRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_5_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='z' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDirectionAccess().getZKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectionAccess().getZEDoubleParserRuleCall_6_1_0()); 
	    }
		lv_z_7_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectionRule());
	        }
       		set(
       			$current, 
       			"z",
        		lv_z_7_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDirectionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


