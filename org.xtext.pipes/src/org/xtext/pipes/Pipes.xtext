// automatically generated by Xtext
grammar org.xtext.pipes.Pipes with org.eclipse.xtext.common.Terminals

import "platform:/resource/Pipes/model/Pipes.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	{Model}
	'Walls' elements+=WallRule ( "and" elements+=WallRule)*
	'Openings' elements+=Opening ( "and" elements+=Opening)*
	'Pipes' elements+=FlowSegment ( "and" elements+=FlowSegment)*
	;


EString returns ecore::EString:
	STRING | ID;

WallRule returns Wall:
	'Wall' name=EString
		'Name' elementName=EString
		'Description' Description=EString
		'placement' placement=LocalPlacement
	;

Opening returns Opening:
	'Opening' name=EString
		('Name' elementName=EString)?
		('Description' Description=EString)?
		'placement' placement=LocalPlacement
		'walls' walls+=[Wall|ID] ( "," walls+=[Wall|ID])*
	;


FlowSegment returns FlowSegment:
	'Pipe' name=EString
		('Name' elementName=EString)?
		('Description' Description=EString)?
		'placement' placement=LocalPlacement
	;

LocalPlacement returns LocalPlacement:
	{LocalPlacement}
	'{'
		('relativeTo' relativeTo=LocalPlacement)?
		('axis2placement3d' axis2placement3d=Axis2Placement3D)?
	'}';

Axis2Placement3D returns Axis2Placement3D:
	'{'
		'cartesian' '('cartesianX=EDouble',' cartesianY=EDouble',' cartesianZ=EDouble ')'
		'axis' axis=Direction
		'refDir' refDirection=Direction
	'}';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

Direction returns Direction:
	'('x=EDouble',' y=EDouble (',' z=EDouble)? ')';
