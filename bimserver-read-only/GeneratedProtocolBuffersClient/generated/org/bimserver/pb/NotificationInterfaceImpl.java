// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notification.proto

package org.bimserver.pb;

public final class NotificationInterfaceImpl {
  private NotificationInterfaceImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface NewLogActionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .org.bimserver.pb.SLogAction logAction = 1;
    boolean hasLogAction();
    org.bimserver.pb.ServiceInterfaceImpl.SLogAction getLogAction();
    org.bimserver.pb.ServiceInterfaceImpl.SLogActionOrBuilder getLogActionOrBuilder();
    
    // optional .org.bimserver.pb.SToken token = 2;
    boolean hasToken();
    org.bimserver.pb.ServiceInterfaceImpl.SToken getToken();
    org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder getTokenOrBuilder();
    
    // optional string apiUrl = 3;
    boolean hasApiUrl();
    String getApiUrl();
  }
  public static final class NewLogActionRequest extends
      com.google.protobuf.GeneratedMessage
      implements NewLogActionRequestOrBuilder {
    // Use NewLogActionRequest.newBuilder() to construct.
    private NewLogActionRequest(Builder builder) {
      super(builder);
    }
    private NewLogActionRequest(boolean noInit) {}
    
    private static final NewLogActionRequest defaultInstance;
    public static NewLogActionRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public NewLogActionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewLogActionRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewLogActionRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .org.bimserver.pb.SLogAction logAction = 1;
    public static final int LOGACTION_FIELD_NUMBER = 1;
    private org.bimserver.pb.ServiceInterfaceImpl.SLogAction logAction_;
    public boolean hasLogAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.bimserver.pb.ServiceInterfaceImpl.SLogAction getLogAction() {
      return logAction_;
    }
    public org.bimserver.pb.ServiceInterfaceImpl.SLogActionOrBuilder getLogActionOrBuilder() {
      return logAction_;
    }
    
    // optional .org.bimserver.pb.SToken token = 2;
    public static final int TOKEN_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SToken token_;
    public boolean hasToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.bimserver.pb.ServiceInterfaceImpl.SToken getToken() {
      return token_;
    }
    public org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder getTokenOrBuilder() {
      return token_;
    }
    
    // optional string apiUrl = 3;
    public static final int APIURL_FIELD_NUMBER = 3;
    private Object apiUrl_;
    public boolean hasApiUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getApiUrl() {
      Object ref = apiUrl_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          apiUrl_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getApiUrlBytes() {
      Object ref = apiUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        apiUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      logAction_ = org.bimserver.pb.ServiceInterfaceImpl.SLogAction.getDefaultInstance();
      token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
      apiUrl_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasLogAction()) {
        if (!getLogAction().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, logAction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, token_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getApiUrlBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, logAction_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, token_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getApiUrlBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewLogActionRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_NewLogActionRequest_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLogActionFieldBuilder();
          getTokenFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (logActionBuilder_ == null) {
          logAction_ = org.bimserver.pb.ServiceInterfaceImpl.SLogAction.getDefaultInstance();
        } else {
          logActionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tokenBuilder_ == null) {
          token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
        } else {
          tokenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        apiUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest result = new org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (logActionBuilder_ == null) {
          result.logAction_ = logAction_;
        } else {
          result.logAction_ = logActionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tokenBuilder_ == null) {
          result.token_ = token_;
        } else {
          result.token_ = tokenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.apiUrl_ = apiUrl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.getDefaultInstance()) return this;
        if (other.hasLogAction()) {
          mergeLogAction(other.getLogAction());
        }
        if (other.hasToken()) {
          mergeToken(other.getToken());
        }
        if (other.hasApiUrl()) {
          setApiUrl(other.getApiUrl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasLogAction()) {
          if (!getLogAction().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.bimserver.pb.ServiceInterfaceImpl.SLogAction.Builder subBuilder = org.bimserver.pb.ServiceInterfaceImpl.SLogAction.newBuilder();
              if (hasLogAction()) {
                subBuilder.mergeFrom(getLogAction());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLogAction(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder subBuilder = org.bimserver.pb.ServiceInterfaceImpl.SToken.newBuilder();
              if (hasToken()) {
                subBuilder.mergeFrom(getToken());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToken(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              apiUrl_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .org.bimserver.pb.SLogAction logAction = 1;
      private org.bimserver.pb.ServiceInterfaceImpl.SLogAction logAction_ = org.bimserver.pb.ServiceInterfaceImpl.SLogAction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLogAction, org.bimserver.pb.ServiceInterfaceImpl.SLogAction.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLogActionOrBuilder> logActionBuilder_;
      public boolean hasLogAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SLogAction getLogAction() {
        if (logActionBuilder_ == null) {
          return logAction_;
        } else {
          return logActionBuilder_.getMessage();
        }
      }
      public Builder setLogAction(org.bimserver.pb.ServiceInterfaceImpl.SLogAction value) {
        if (logActionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logAction_ = value;
          onChanged();
        } else {
          logActionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setLogAction(
          org.bimserver.pb.ServiceInterfaceImpl.SLogAction.Builder builderForValue) {
        if (logActionBuilder_ == null) {
          logAction_ = builderForValue.build();
          onChanged();
        } else {
          logActionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeLogAction(org.bimserver.pb.ServiceInterfaceImpl.SLogAction value) {
        if (logActionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              logAction_ != org.bimserver.pb.ServiceInterfaceImpl.SLogAction.getDefaultInstance()) {
            logAction_ =
              org.bimserver.pb.ServiceInterfaceImpl.SLogAction.newBuilder(logAction_).mergeFrom(value).buildPartial();
          } else {
            logAction_ = value;
          }
          onChanged();
        } else {
          logActionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearLogAction() {
        if (logActionBuilder_ == null) {
          logAction_ = org.bimserver.pb.ServiceInterfaceImpl.SLogAction.getDefaultInstance();
          onChanged();
        } else {
          logActionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SLogAction.Builder getLogActionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLogActionFieldBuilder().getBuilder();
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SLogActionOrBuilder getLogActionOrBuilder() {
        if (logActionBuilder_ != null) {
          return logActionBuilder_.getMessageOrBuilder();
        } else {
          return logAction_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLogAction, org.bimserver.pb.ServiceInterfaceImpl.SLogAction.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLogActionOrBuilder> 
          getLogActionFieldBuilder() {
        if (logActionBuilder_ == null) {
          logActionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SLogAction, org.bimserver.pb.ServiceInterfaceImpl.SLogAction.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLogActionOrBuilder>(
                  logAction_,
                  getParentForChildren(),
                  isClean());
          logAction_ = null;
        }
        return logActionBuilder_;
      }
      
      // optional .org.bimserver.pb.SToken token = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SToken token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SToken, org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder, org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder> tokenBuilder_;
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SToken getToken() {
        if (tokenBuilder_ == null) {
          return token_;
        } else {
          return tokenBuilder_.getMessage();
        }
      }
      public Builder setToken(org.bimserver.pb.ServiceInterfaceImpl.SToken value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          token_ = value;
          onChanged();
        } else {
          tokenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setToken(
          org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          token_ = builderForValue.build();
          onChanged();
        } else {
          tokenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeToken(org.bimserver.pb.ServiceInterfaceImpl.SToken value) {
        if (tokenBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              token_ != org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance()) {
            token_ =
              org.bimserver.pb.ServiceInterfaceImpl.SToken.newBuilder(token_).mergeFrom(value).buildPartial();
          } else {
            token_ = value;
          }
          onChanged();
        } else {
          tokenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearToken() {
        if (tokenBuilder_ == null) {
          token_ = org.bimserver.pb.ServiceInterfaceImpl.SToken.getDefaultInstance();
          onChanged();
        } else {
          tokenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder getTokenBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTokenFieldBuilder().getBuilder();
      }
      public org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder getTokenOrBuilder() {
        if (tokenBuilder_ != null) {
          return tokenBuilder_.getMessageOrBuilder();
        } else {
          return token_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SToken, org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder, org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder> 
          getTokenFieldBuilder() {
        if (tokenBuilder_ == null) {
          tokenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SToken, org.bimserver.pb.ServiceInterfaceImpl.SToken.Builder, org.bimserver.pb.ServiceInterfaceImpl.STokenOrBuilder>(
                  token_,
                  getParentForChildren(),
                  isClean());
          token_ = null;
        }
        return tokenBuilder_;
      }
      
      // optional string apiUrl = 3;
      private Object apiUrl_ = "";
      public boolean hasApiUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getApiUrl() {
        Object ref = apiUrl_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          apiUrl_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setApiUrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        apiUrl_ = value;
        onChanged();
        return this;
      }
      public Builder clearApiUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        apiUrl_ = getDefaultInstance().getApiUrl();
        onChanged();
        return this;
      }
      void setApiUrl(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        apiUrl_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.NewLogActionRequest)
    }
    
    static {
      defaultInstance = new NewLogActionRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.NewLogActionRequest)
  }
  
  public interface ProgressRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 topicId = 1;
    boolean hasTopicId();
    long getTopicId();
    
    // optional .org.bimserver.pb.SLongActionState state = 2;
    boolean hasState();
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState();
    org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder();
  }
  public static final class ProgressRequest extends
      com.google.protobuf.GeneratedMessage
      implements ProgressRequestOrBuilder {
    // Use ProgressRequest.newBuilder() to construct.
    private ProgressRequest(Builder builder) {
      super(builder);
    }
    private ProgressRequest(boolean noInit) {}
    
    private static final ProgressRequest defaultInstance;
    public static ProgressRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProgressRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 topicId = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private long topicId_;
    public boolean hasTopicId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTopicId() {
      return topicId_;
    }
    
    // optional .org.bimserver.pb.SLongActionState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState state_;
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState() {
      return state_;
    }
    public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder() {
      return state_;
    }
    
    private void initFields() {
      topicId_ = 0L;
      state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, state_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, topicId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bimserver.pb.NotificationInterfaceImpl.ProgressRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bimserver.pb.NotificationInterfaceImpl.internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable;
      }
      
      // Construct using org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        topicId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stateBuilder_ == null) {
          state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDescriptor();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest getDefaultInstanceForType() {
        return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance();
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest build() {
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest buildPartial() {
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest result = new org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topicId_ = topicId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest) {
          return mergeFrom((org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest other) {
        if (other == org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance()) return this;
        if (other.hasTopicId()) {
          setTopicId(other.getTopicId());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              topicId_ = input.readInt64();
              break;
            }
            case 18: {
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder subBuilder = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.newBuilder();
              if (hasState()) {
                subBuilder.mergeFrom(getState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setState(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 topicId = 1;
      private long topicId_ ;
      public boolean hasTopicId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTopicId() {
        return topicId_;
      }
      public Builder setTopicId(long value) {
        bitField0_ |= 0x00000001;
        topicId_ = value;
        onChanged();
        return this;
      }
      public Builder clearTopicId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topicId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .org.bimserver.pb.SLongActionState state = 2;
      private org.bimserver.pb.ServiceInterfaceImpl.SLongActionState state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> stateBuilder_;
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState getState() {
        if (stateBuilder_ == null) {
          return state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      public Builder setState(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setState(
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeState(org.bimserver.pb.ServiceInterfaceImpl.SLongActionState value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              state_ != org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance()) {
            state_ =
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.getDefaultInstance();
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      public org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bimserver.pb.ServiceInterfaceImpl.SLongActionState, org.bimserver.pb.ServiceInterfaceImpl.SLongActionState.Builder, org.bimserver.pb.ServiceInterfaceImpl.SLongActionStateOrBuilder>(
                  state_,
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.bimserver.pb.ProgressRequest)
    }
    
    static {
      defaultInstance = new ProgressRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.bimserver.pb.ProgressRequest)
  }
  
  public static abstract class NotificationInterface
      implements com.google.protobuf.Service {
    protected NotificationInterface() {}
    
    public interface Interface {
      public abstract void newLogAction(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
      
      public abstract void progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new NotificationInterface() {
        @java.lang.Override
        public  void newLogAction(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.newLogAction(controller, request, done);
        }
        
        @java.lang.Override
        public  void progress(
            com.google.protobuf.RpcController controller,
            org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
            com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
          impl.progress(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.newLogAction(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest)request);
            case 1:
              return impl.progress(controller, (org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.getDefaultInstance();
            case 1:
              return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            case 1:
              return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void newLogAction(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
    
    public abstract void progress(
        com.google.protobuf.RpcController controller,
        org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
        com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.bimserver.pb.NotificationInterfaceImpl.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.newLogAction(controller, (org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        case 1:
          this.progress(controller, (org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest)request,
            com.google.protobuf.RpcUtil.<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.getDefaultInstance();
        case 1:
          return org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        case 1:
          return org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.bimserver.pb.NotificationInterfaceImpl.NotificationInterface implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void newLogAction(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
      
      public  void progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request,
          com.google.protobuf.RpcCallback<org.bimserver.pb.ServiceInterfaceImpl.VoidResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.class,
            org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newLogAction(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse newLogAction(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }
      
      
      public org.bimserver.pb.ServiceInterfaceImpl.VoidResponse progress(
          com.google.protobuf.RpcController controller,
          org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.bimserver.pb.ServiceInterfaceImpl.VoidResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.bimserver.pb.ServiceInterfaceImpl.VoidResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_NewLogActionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_NewLogActionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_bimserver_pb_ProgressRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022notification.proto\022\020org.bimserver.pb\032\r" +
      "service.proto\"\177\n\023NewLogActionRequest\022/\n\t" +
      "logAction\030\001 \001(\0132\034.org.bimserver.pb.SLogA" +
      "ction\022\'\n\005token\030\002 \001(\0132\030.org.bimserver.pb." +
      "SToken\022\016\n\006apiUrl\030\003 \001(\t\"U\n\017ProgressReques" +
      "t\022\017\n\007topicId\030\001 \001(\003\0221\n\005state\030\002 \001(\0132\".org." +
      "bimserver.pb.SLongActionState2\275\001\n\025Notifi" +
      "cationInterface\022U\n\014newLogAction\022%.org.bi" +
      "mserver.pb.NewLogActionRequest\032\036.org.bim" +
      "server.pb.VoidResponse\022M\n\010progress\022!.org",
      ".bimserver.pb.ProgressRequest\032\036.org.bims" +
      "erver.pb.VoidResponseB B\031NotificationInt" +
      "erfaceImplH\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_bimserver_pb_NewLogActionRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_bimserver_pb_NewLogActionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_NewLogActionRequest_descriptor,
              new java.lang.String[] { "LogAction", "Token", "ApiUrl", },
              org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.class,
              org.bimserver.pb.NotificationInterfaceImpl.NewLogActionRequest.Builder.class);
          internal_static_org_bimserver_pb_ProgressRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_bimserver_pb_ProgressRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_bimserver_pb_ProgressRequest_descriptor,
              new java.lang.String[] { "TopicId", "State", },
              org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.class,
              org.bimserver.pb.NotificationInterfaceImpl.ProgressRequest.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.bimserver.pb.ServiceInterfaceImpl.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
