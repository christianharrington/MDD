/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl1.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMain
entryRuleMain 
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainAccess().getGroup()); }
(rule__Main__Group__0)
{ after(grammarAccess.getMainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBIMServerCredentials
entryRuleBIMServerCredentials 
:
{ before(grammarAccess.getBIMServerCredentialsRule()); }
	 ruleBIMServerCredentials
{ after(grammarAccess.getBIMServerCredentialsRule()); } 
	 EOF 
;

// Rule BIMServerCredentials
ruleBIMServerCredentials
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getGroup()); }
(rule__BIMServerCredentials__Group__0)
{ after(grammarAccess.getBIMServerCredentialsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLamp
entryRuleLamp 
:
{ before(grammarAccess.getLampRule()); }
	 ruleLamp
{ after(grammarAccess.getLampRule()); } 
	 EOF 
;

// Rule Lamp
ruleLamp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLampAccess().getGroup()); }
(rule__Lamp__Group__0)
{ after(grammarAccess.getLampAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Main__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__0__Impl
	rule__Main__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getMainAction_0()); }
(

)
{ after(grammarAccess.getMainAccess().getMainAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__1__Impl
	rule__Main__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getMainKeyword_1()); }

	'Main' 

{ after(grammarAccess.getMainAccess().getMainKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__2__Impl
	rule__Main__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMainAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__3__Impl
	rule__Main__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getGroup_3()); }
(rule__Main__Group_3__0)?
{ after(grammarAccess.getMainAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__4__Impl
	rule__Main__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getGroup_4()); }
(rule__Main__Group_4__0)?
{ after(grammarAccess.getMainAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getMainAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Main__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_3__0__Impl
	rule__Main__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBIMServerKeyword_3_0()); }

	'BIMServer' 

{ after(grammarAccess.getMainAccess().getBIMServerKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBIMServerAssignment_3_1()); }
(rule__Main__BIMServerAssignment_3_1)
{ after(grammarAccess.getMainAccess().getBIMServerAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Main__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4__0__Impl
	rule__Main__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLampKeyword_4_0()); }

	'Lamp' 

{ after(grammarAccess.getMainAccess().getLampKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4__1__Impl
	rule__Main__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getMainAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4__2__Impl
	rule__Main__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLampAssignment_4_2()); }
(rule__Main__LampAssignment_4_2)
{ after(grammarAccess.getMainAccess().getLampAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4__3__Impl
	rule__Main__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getGroup_4_3()); }
(rule__Main__Group_4_3__0)*
{ after(grammarAccess.getMainAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getMainAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Main__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4_3__0__Impl
	rule__Main__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getMainAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLampAssignment_4_3_1()); }
(rule__Main__LampAssignment_4_3_1)
{ after(grammarAccess.getMainAccess().getLampAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BIMServerCredentials__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__0__Impl
	rule__BIMServerCredentials__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getBIMServerCredentialsAction_0()); }
(

)
{ after(grammarAccess.getBIMServerCredentialsAccess().getBIMServerCredentialsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__1__Impl
	rule__BIMServerCredentials__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getBIMServerCredentialsKeyword_1()); }

	'BIMServerCredentials' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getBIMServerCredentialsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__2__Impl
	rule__BIMServerCredentials__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__3__Impl
	rule__BIMServerCredentials__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getGroup_3()); }
(rule__BIMServerCredentials__Group_3__0)?
{ after(grammarAccess.getBIMServerCredentialsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__4__Impl
	rule__BIMServerCredentials__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getGroup_4()); }
(rule__BIMServerCredentials__Group_4__0)?
{ after(grammarAccess.getBIMServerCredentialsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__5__Impl
	rule__BIMServerCredentials__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getGroup_5()); }
(rule__BIMServerCredentials__Group_5__0)?
{ after(grammarAccess.getBIMServerCredentialsAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__6__Impl
	rule__BIMServerCredentials__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getGroup_6()); }
(rule__BIMServerCredentials__Group_6__0)?
{ after(grammarAccess.getBIMServerCredentialsAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__7__Impl
	rule__BIMServerCredentials__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getGroup_7()); }
(rule__BIMServerCredentials__Group_7__0)?
{ after(grammarAccess.getBIMServerCredentialsAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__BIMServerCredentials__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_3__0__Impl
	rule__BIMServerCredentials__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getAddressKeyword_3_0()); }

	'address' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getAddressKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getAddressAssignment_3_1()); }
(rule__BIMServerCredentials__AddressAssignment_3_1)
{ after(grammarAccess.getBIMServerCredentialsAccess().getAddressAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BIMServerCredentials__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_4__0__Impl
	rule__BIMServerCredentials__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getPortKeyword_4_0()); }

	'port' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getPortKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getPortAssignment_4_1()); }
(rule__BIMServerCredentials__PortAssignment_4_1)
{ after(grammarAccess.getBIMServerCredentialsAccess().getPortAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BIMServerCredentials__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_5__0__Impl
	rule__BIMServerCredentials__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getProjectNameKeyword_5_0()); }

	'projectName' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getProjectNameKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getProjectNameAssignment_5_1()); }
(rule__BIMServerCredentials__ProjectNameAssignment_5_1)
{ after(grammarAccess.getBIMServerCredentialsAccess().getProjectNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BIMServerCredentials__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_6__0__Impl
	rule__BIMServerCredentials__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getUserNameKeyword_6_0()); }

	'userName' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getUserNameKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getUserNameAssignment_6_1()); }
(rule__BIMServerCredentials__UserNameAssignment_6_1)
{ after(grammarAccess.getBIMServerCredentialsAccess().getUserNameAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BIMServerCredentials__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_7__0__Impl
	rule__BIMServerCredentials__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getPasswordKeyword_7_0()); }

	'password' 

{ after(grammarAccess.getBIMServerCredentialsAccess().getPasswordKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BIMServerCredentials__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BIMServerCredentials__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getPasswordAssignment_7_1()); }
(rule__BIMServerCredentials__PasswordAssignment_7_1)
{ after(grammarAccess.getBIMServerCredentialsAccess().getPasswordAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Lamp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group__0__Impl
	rule__Lamp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getLampAction_0()); }
(

)
{ after(grammarAccess.getLampAccess().getLampAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group__1__Impl
	rule__Lamp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getLampKeyword_1()); }

	'Lamp' 

{ after(grammarAccess.getLampAccess().getLampKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group__2__Impl
	rule__Lamp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getLampAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group__3__Impl
	rule__Lamp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getGroup_3()); }
(rule__Lamp__Group_3__0)?
{ after(grammarAccess.getLampAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group__4__Impl
	rule__Lamp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getGroup_4()); }
(rule__Lamp__Group_4__0)?
{ after(grammarAccess.getLampAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getLampAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Lamp__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group_3__0__Impl
	rule__Lamp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getGlobalIDKeyword_3_0()); }

	'GlobalID' 

{ after(grammarAccess.getLampAccess().getGlobalIDKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getGlobalIDAssignment_3_1()); }
(rule__Lamp__GlobalIDAssignment_3_1)
{ after(grammarAccess.getLampAccess().getGlobalIDAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Lamp__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group_4__0__Impl
	rule__Lamp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getPredefinedTypeKeyword_4_0()); }

	'PredefinedType' 

{ after(grammarAccess.getLampAccess().getPredefinedTypeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lamp__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lamp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getPredefinedTypeAssignment_4_1()); }
(rule__Lamp__PredefinedTypeAssignment_4_1)
{ after(grammarAccess.getLampAccess().getPredefinedTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Main__BIMServerAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBIMServerBIMServerCredentialsParserRuleCall_3_1_0()); }
	ruleBIMServerCredentials{ after(grammarAccess.getMainAccess().getBIMServerBIMServerCredentialsParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Main__LampAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLampLampParserRuleCall_4_2_0()); }
	ruleLamp{ after(grammarAccess.getMainAccess().getLampLampParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Main__LampAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getLampLampParserRuleCall_4_3_1_0()); }
	ruleLamp{ after(grammarAccess.getMainAccess().getLampLampParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__AddressAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getAddressEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getBIMServerCredentialsAccess().getAddressEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__PortAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getPortEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getBIMServerCredentialsAccess().getPortEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__ProjectNameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getProjectNameEStringParserRuleCall_5_1_0()); }
	ruleEString{ after(grammarAccess.getBIMServerCredentialsAccess().getProjectNameEStringParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__UserNameAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getUserNameEStringParserRuleCall_6_1_0()); }
	ruleEString{ after(grammarAccess.getBIMServerCredentialsAccess().getUserNameEStringParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BIMServerCredentials__PasswordAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIMServerCredentialsAccess().getPasswordEStringParserRuleCall_7_1_0()); }
	ruleEString{ after(grammarAccess.getBIMServerCredentialsAccess().getPasswordEStringParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__GlobalIDAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getGlobalIDEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getLampAccess().getGlobalIDEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lamp__PredefinedTypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLampAccess().getPredefinedTypeEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getLampAccess().getPredefinedTypeEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


